using System.Collections.Generic;
using System.Web.Mvc;
using INMETRO.CIPP.SERVICOS.Interfaces;
using INMETRO.CIPP.SERVICOS.ModelService;
using INMETRO.CIPP.WEB.Models;

namespace INMETRO.CIPP.WEB.Controllers
{
    public class InspecaoController : Controller
    {

        private readonly IInspecaoServico _servico;
       

        public InspecaoController(IInspecaoServico servico)
        {
            _servico = servico;
        }

        // GET: Inspecao
        public ActionResult ConsultaInspecao()
        {
            var user = HttpContext.Session["Usuario"];
            if (user == null)
                return RedirectToAction("Login", "Login");
            return View();
        }

        [HttpPost]
        public ActionResult ConsultaInspecao(DownloadModel model)
        {

            var lista = new List<InspecaoModel>();
            ViewData["DownloadModel"] = model;
            List<InspecaoModelServico> resultado;
            RetornoDownloadModel retornoMensagem = new RetornoDownloadModel();
            if (!string.IsNullOrEmpty(model.CodigoOia) || !string.IsNullOrEmpty(model.CodigoCipp))
            {
                resultado = (List<InspecaoModelServico>) _servico.ObterInspecoes(model.CodigoOia, model.CodigoCipp);
                lista = Conversao.Converter.ConverterParaModelo(resultado);
                foreach (var item in lista)
                {
                    if (item.ExisteExcecao)
                    {
                      
                        retornoMensagem.Mensagem = item.Mensagem;
                        return PartialView("_BuscaInspecaoError", retornoMensagem);
                    }
                }
                return View(lista);
            }
            else
            {
                resultado = (List<InspecaoModelServico>) _servico.ObterTodasInspecoes();
                if (resultado == null) return View(lista);
            }

            lista = Conversao.Converter.ConverterParaModelo(resultado);
            
            return View(lista);
        }
    }
}